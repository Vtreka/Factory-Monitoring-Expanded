{"events":[],"handlers":[{"code":"-- Script created by Bartas (ingame), BartasRS#2742 (Discord)\r\n-- Updates provided by Vtreka (ingame), Vtreka#1337 (Discord)\r\n\r\nsystem.print(\" --- Factory Monitor Expanded v2.1 ---\")\r\nsystem.print (\"type 'help' for available commands\")\r\n\r\nscreens = {}\r\ncore_unit = {}\r\n--local json = require('dkjson')\r\n\r\nfor slot_name, slot in pairs(unit) do\r\n    if type(slot) == \"table\"\r\n        and type(slot.export) == \"table\"\r\n        and slot.getClass\r\n    then\r\n        slot.slotname = slot_name\r\n        if slot.getClass():lower():find('screenunit') then \r\n            table.insert(screens,slot)\r\n            slot.activate()\r\n        elseif slot.getClass():lower():find('coreunit') then table.insert(core_unit,slot)\r\n        end\r\n    end\r\nend\r\n\r\n\r\nif #screens == 0 then\r\n    system.print(\"No screen detected\")\r\nelse\r\n    table.sort(screens, function(a,b) return a.slotname < b.slotname end)\r\n    local plural = \"\"\r\n    if #screens > 1 then plural = \"s\" end\r\n    system.print(#screens .. \" screen\" .. plural .. \" connected\")\r\nend\r\n\r\nif #core_unit == 0 then\r\n    system.print(\"No core detected\") else system.print(\"Core connected\")\r\nend\r\n\r\nelementIdList = core_unit[1].getElementIdList()\r\n\r\n\r\nmetalwork1 = {}\r\nmetalwork2 = {}\r\nmetalwork3 = {}\r\nmetalwork4 = {}\r\n\r\nelectronics1 = {}\r\nelectronics2 = {}\r\nelectronics3 = {}\r\nelectronics4 = {}\r\n\r\nglass1 = {}\r\nglass2 = {}\r\nglass3 = {}\r\nglass4 = {}\r\n\r\nprinter1 = {}\r\nprinter2 = {}\r\nprinter3 = {}\r\nprinter4 = {}\r\n\r\nchemical1 = {}\r\nchemical2 = {}\r\nchemical3 = {}\r\nchemical4 = {}\r\n\r\nrefiner1 = {}\r\nrefiner2 = {}\r\nrefiner3 = {}\r\nrefiner4 = {} \r\n\r\nsmelter1 = {}\r\nsmelter2 = {}\r\nsmelter3 = {}\r\nsmelter4 = {}\r\n\r\nhoney1 = {}\r\nhoney2 = {}\r\nhoney3 = {}\r\nhoney4 = {}\r\n\r\nrecycler1 = {}\r\nrecycler2 = {}\r\nrecycler3 = {}\r\nrecycler4 = {}\r\n\r\n-- Assembly Lines --\r\n\r\nassembly1 = {}\r\nassembly2 = {}\r\nassembly3 = {}\r\nassembly4 = {}\r\n \r\nmetalwork_count = {0,0,0,0}\r\nelectronics_count = {0,0,0,0}\r\nglass_count = {0,0,0,0}\r\nprinter_count = {0,0,0,0}\r\nchemical_count = {0,0,0,0}\r\nrefiner_count = {0,0,0,0}\r\nsmelter_count = {0,0,0,0}\r\nassembly_count = {0,0,0,0}\r\nhoney_count = {0,0,0,0}\r\nrecycler_count = {0,0,0,0}\r\n\r\n\r\n---- substitution list, credits to Squizz Cephinator\r\nlocal ntxt = \"\"\r\nfunction getName(ntxt)    \r\n      \r\n        ntxt = ntxt:gsub(\" xs$\", \" XS\")\r\n        ntxt = ntxt:gsub(\" s$\", \" S\")\r\n        ntxt = ntxt:gsub(\" m$\", \" M\")\r\n        ntxt = ntxt:gsub(\" l$\", \" L\")\r\n        ntxt = ntxt:gsub(\" xl$\", \" XL\")\r\n        ntxt = ntxt:gsub(\" Unit$\", \" U\")\r\n        ntxt = ntxt:gsub(\"^Basic \", \"B \")\r\n        ntxt = ntxt:gsub(\"^Uncommon \", \"U \")\r\n        ntxt = ntxt:gsub(\"^Advanced \", \"A \")\r\n        ntxt = ntxt:gsub(\"^Rare \", \"R \")\r\n        ntxt = ntxt:gsub(\"^Exotic \", \"X \")\r\n        ntxt = ntxt:gsub(\" industry \", \" I \")\r\n        ntxt = ntxt:gsub(\" Industry \", \" I \")\r\n        ntxt = ntxt:gsub(\" Reinforced \", \" Rfcd \")\r\n        ntxt = ntxt:gsub(\" plastic \", \" \")\r\n        ntxt = ntxt:gsub(\" product$\", \" \")\r\n        ntxt = ntxt:gsub(\" Product$\", \" \")\r\n        ntxt = ntxt:gsub(\" Container \", \" Ctnr \")    \r\n    \r\n    return ntxt\r\nend\r\n\r\nfor index,id in ipairs(elementIdList) do\r\n    elementType = core_unit[1].getElementDisplayNameById(id):lower()\r\n    \r\n    if (elementType:find(\"metalwork industry\")) then\r\n            if (elementType:find(\"basic\")) then \r\n            table.insert(metalwork1,id)  metalwork_count[1] = metalwork_count[1] + 1        \r\n            elseif (elementType:find(\"uncommon\")) then \r\n            table.insert(metalwork2,id)  metalwork_count[2] = metalwork_count[2] + 1 \r\n            elseif (elementType:find(\"advanced\")) then\r\n            table.insert(metalwork3,id) metalwork_count[3] = metalwork_count[3] + 1\r\n            elseif (elementType:find(\"rare\")) then\r\n            table.insert(metalwork4,id)  metalwork_count[4] = metalwork_count[4] + 1\r\n            end\r\n    end\r\n    if (elementType:find(\"electronics industry\")) then\r\n            if (elementType:find(\"basic\")) then\r\n            table.insert(electronics1,id)  electronics_count[1] = electronics_count[1] + 1\r\n            elseif (elementType:find(\"uncommon\")) then\r\n            table.insert(electronics2,id)  electronics_count[2] = electronics_count[2] + 1\r\n            elseif (elementType:find(\"advanced\")) then\r\n            table.insert(electronics3,id)  electronics_count[3] = electronics_count[3] + 1\r\n            elseif (elementType:find(\"rare\")) then \r\n            table.insert(electronics4,id)  electronics_count[4] = electronics_count[4] + 1\r\n            end\r\n    end \r\n    if (elementType:find(\"glass furnace\")) then\r\n            if (elementType:find(\"basic\")) then  \r\n            table.insert(glass1,id)  glass_count[1] = glass_count[1] + 1\r\n            elseif (elementType:find(\"uncommon\")) then \r\n            table.insert(glass2,id)  glass_count[2] = glass_count[2] + 1\r\n            elseif (elementType:find(\"advanced\")) then \r\n            table.insert(glass3,id)  glass_count[3] = glass_count[3] + 1\r\n            elseif (elementType:find(\"rare\")) then \r\n            table.insert(glass4,id)  glass_count[4] = glass_count[4] + 1\r\n            end\r\n    end \r\n    if (elementType:find(\"3d printer\")) then\r\n            if (elementType:find(\"basic\")) then \r\n            table.insert(printer1,id)  printer_count[1] = printer_count[1] + 1\r\n            elseif (elementType:find(\"uncommon\")) then \r\n            table.insert(printer2,id)  printer_count[2] = printer_count[2] + 1\r\n            elseif (elementType:find(\"advanced\")) then \r\n            table.insert(printer3,id)  printer_count[3] = printer_count[3] + 1\r\n            elseif (elementType:find(\"rare\")) then \r\n            table.insert(printer4,id)  printer_count[4] = printer_count[4] + 1\r\n            end\r\n    end\r\n    if (elementType:find(\"chemical industry\")) then\r\n            if (elementType:find(\"basic\")) then \r\n            table.insert(chemical1,id)  chemical_count[1] = chemical_count[1] + 1\r\n            elseif (elementType:find(\"uncommon\")) then \r\n            table.insert(chemical2,id)  chemical_count[2] = chemical_count[2] + 1\r\n            elseif (elementType:find(\"advanced\")) then \r\n            table.insert(chemical3,id)  chemical_count[3] = chemical_count[3] + 1\r\n            elseif (elementType:find(\"rare\")) then \r\n            table.insert(chemical4,id)  chemical_count[4] = chemical_count[4] + 1\r\n            end\r\n    end\r\n    if (elementType:find(\"refiner\")) and not (elementType:find(\"honeycomb\")) then\r\n            if (elementType:find(\"basic\")) then \r\n            table.insert(refiner1,id)  refiner_count[1] = refiner_count[1] + 1\r\n            elseif (elementType:find(\"uncommon\")) then \r\n            table.insert(refiner2,id)  refiner_count[2] = refiner_count[2] + 1\r\n            elseif (elementType:find(\"advanced\")) then \r\n            table.insert(refiner3,id)  refiner_count[3] = refiner_count[3] + 1\r\n            elseif (elementType:find(\"rare\")) then \r\n            table.insert(refiner4,id)  refiner_count[4] = refiner_count[4] + 1\r\n            end\r\n    end\r\n    if (elementType:find(\"smelter\")) then\r\n            if (elementType:find(\"basic\")) then \r\n            table.insert(smelter1,id)  smelter_count[1] = smelter_count[1] + 1\r\n            elseif (elementType:find(\"uncommon\")) then \r\n            table.insert(smelter2,id)  smelter_count[2] = smelter_count[2] + 1\r\n            elseif (elementType:find(\"advanced\")) then \r\n            table.insert(smelter3,id)  smelter_count[3] = smelter_count[3] + 1\r\n            elseif (elementType:find(\"rare\")) then \r\n            table.insert(smelter4,id)  smelter_count[4] = smelter_count[4] + 1\r\n            end\r\n    end\r\n    if (elementType:find(\"assembly line\")) then\r\n            if (elementType:find(\"basic\")) then \r\n            table.insert(assembly1,id)  assembly_count[1] = assembly_count[1] + 1\r\n            elseif (elementType:find(\"uncommon\")) then \r\n            table.insert(assembly2,id)  assembly_count[2] = assembly_count[2] + 1\r\n            elseif (elementType:find(\"advanced\")) then \r\n            table.insert(assembly3,id)  assembly_count[3] = assembly_count[3] + 1\r\n            elseif (elementType:find(\"rare\")) then \r\n            table.insert(assembly4,id)  assembly_count[4] = assembly_count[4] + 1\r\n            end\r\n    end\r\n    if (elementType:find(\"honeycomb\")) then\r\n            if (elementType:find(\"basic\")) then \r\n            table.insert(honey1,id)  honey_count[1] = honey_count[1] + 1\r\n            elseif (elementType:find(\"uncommon\")) then \r\n            table.insert(honey2,id)  honey_count[2] = honey_count[2] + 1\r\n            elseif (elementType:find(\"advanced\")) then \r\n            table.insert(honey3,id)  assembly_count[3] = honey_count[3] + 1\r\n            elseif (elementType:find(\"rare\")) then \r\n            table.insert(honey4,id)  honey_count[4] = honey_count[4] + 1\r\n            end\r\n    end\r\n    if (elementType:find(\"recycler\")) then\r\n            if (elementType:find(\"basic\")) then \r\n            table.insert(recycler1,id)  recycler_count[1] = recycler_count[1] + 1\r\n            elseif (elementType:find(\"uncommon\")) then \r\n            table.insert(recycler2,id)  recycler_count[2] = recycler_count[2] + 1\r\n            elseif (elementType:find(\"advanced\")) then \r\n            table.insert(recycler3,id)  recycler_count[3] = recycler_count[3] + 1\r\n            elseif (elementType:find(\"rare\")) then \r\n            table.insert(recycler4,id)  recycler_count[4] = recycler_count[4] + 1\r\n            end\r\n    end\r\n end\r\n\r\n\r\n\r\nmetalwork_all = metalwork_count[1] + metalwork_count[2] + metalwork_count[3] + metalwork_count[4]\r\nelectronics_all = electronics_count[1] + electronics_count[2] + electronics_count[3] + electronics_count[4]\r\nglass_all = glass_count[1] + glass_count[2] + glass_count[3] + glass_count[4]\r\nprinter_all = printer_count[1] + printer_count[2] + printer_count[3] + printer_count[4]\r\nchemical_all = chemical_count[1] + chemical_count[2] + chemical_count[3] + chemical_count[4]\r\nrefiner_all = refiner_count[1] + refiner_count[2] + refiner_count[3] + refiner_count[4]\r\nsmelter_all = smelter_count[1] + smelter_count[2] + smelter_count[3] + smelter_count[4]\r\nassembly_all = assembly_count[1] + assembly_count[2] + assembly_count[3] + assembly_count[4]\r\nhoney_all = honey_count[1] + honey_count[2] + honey_count[3] + honey_count[4]\r\nrecycler_all = recycler_count[1] + recycler_count[2] + recycler_count[3] + recycler_count[4]\r\nall_count = honey_all + metalwork_all + electronics_all + glass_all + printer_all + chemical_all + refiner_all + smelter_all + assembly_all + recycler_all\r\n\r\nif all_count > 265 then system.print(\"Crazy factory detected! You will need more than 1 screen!\") \r\n    else system.print(\"Factory not so big, you might want to use single screen script.\") end\r\n\r\n","filter":{"args":[],"signature":"onStart()","slotKey":"-5"},"key":"0"},{"code":"local T=text\r\n\r\nindy_type ={\"metalwork\",\"printer\",\"chemical\",\"glass\",\"refiner\",\"smelter\",\"assembler\", \"electronics\", \"honey\", \"recycler\"}\r\n\r\n--local check=string.find(T,\"/help\")\r\n\r\n\r\nif string.find(T,\"help\") then\r\n system.print(\"--- Industry locator ---\")   \r\n system.print(\"Syntax:\")\r\n system.print(\"[machine_type] [tier] [number]\")\r\n system.print(\"ex: assembler t1 1\")\r\n system.print(\"possible machine types: metalwork, printer, chemical, glass, refiner, honey, smelter, electronics, assembler, recycler\")\r\n system.print(\"to clear an arrow type: clear [index]\")\r\n system.print(\"ex: clear 18\")\r\n system.print(\"\")\r\n system.print(\"For assistance contact Bartas (game) or BartasRS#2742 (discord)\")    \r\n end\r\nif string.find(T,\"clear\") then\r\n    str = string.gsub(T, \"clear\" ,\"\")\r\n core_unit[1].deleteSticker(tonumber(str))\r\n end\r\n\r\nif string.find(T, indy_type[1]) then\r\n   str = string.gsub(T, indy_type[1],\"\")\r\n   \r\n       if string.find(str, \"t1\") then \r\n          str = string.gsub(str, \"t1\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(metalwork1[iid])\r\n          --core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\")\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t2\") then \r\n          str = string.gsub(str, \"t2\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(metalwork2[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t3\") then \r\n          str = string.gsub(str, \"t3\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(metalwork3[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t4\") then \r\n          str = string.gsub(str, \"t4\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(metalwork4[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n    \r\nelseif string.find(T, indy_type[2]) then\r\n   str = string.gsub(T, indy_type[2],\"\")\r\n   \r\n       if string.find(str, \"t1\") then \r\n          str = string.gsub(str, \"t1\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(printer1[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t2\") then \r\n          str = string.gsub(str, \"t2\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(printer2[id])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t3\") then \r\n          str = string.gsub(str, \"t3\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(printer3[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t4\") then \r\n          str = string.gsub(str, \"t4\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(printer4[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\nelseif string.find(T, indy_type[3]) then\r\n   str = string.gsub(T, indy_type[3],\"\")\r\n   \r\n       if string.find(str, \"t1\") then \r\n          str = string.gsub(str, \"t1\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(chemical1[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\r\n          end\r\n        if string.find(str, \"t2\") then \r\n          str = string.gsub(str, \"t2\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(chemical2[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\r\n          end\r\n        if string.find(str, \"t3\") then \r\n          str = string.gsub(str, \"t3\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(chemical3[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\r\n          end\r\n        if string.find(str, \"t4\") then \r\n          str = string.gsub(str, \"t4\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(chemical4[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\r\n          end\r\nelseif string.find(T, indy_type[4]) then\r\n   str = string.gsub(T, indy_type[4],\"\")\r\n   \r\n       if string.find(str, \"t1\") then \r\n          str = string.gsub(str, \"t1\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(glass1[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\r\n          end\r\n        if string.find(str, \"t2\") then \r\n          str = string.gsub(str, \"t2\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(glass2[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\r\n          end\r\n        if string.find(str, \"t3\") then \r\n          str = string.gsub(str, \"t3\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(glass3[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\r\n          end\r\n        if string.find(str, \"t4\") then \r\n          str = string.gsub(str, \"t4\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(glass4[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+6,\"down\"))\r\n          end     \r\nelseif string.find(T, indy_type[5]) then\r\n   str = string.gsub(T, indy_type[5],\"\")\r\n   \r\n       if string.find(str, \"t1\") then \r\n          str = string.gsub(str, \"t1\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(refiner1[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t2\") then \r\n          str = string.gsub(str, \"t2\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(refiner2[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t3\") then \r\n          str = string.gsub(str, \"t3\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(refiner3[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t4\") then \r\n          str = string.gsub(str, \"t4\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(refiner4[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\nelseif string.find(T, indy_type[6]) then\r\n   str = string.gsub(T, indy_type[6],\"\")\r\n   \r\n       if string.find(str, \"t1\") then \r\n          str = string.gsub(str, \"t1\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(smelter1[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t2\") then \r\n          str = string.gsub(str, \"t2\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(smelter2[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t3\") then \r\n          str = string.gsub(str, \"t3\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(smelter3[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t4\") then \r\n          str = string.gsub(str, \"t4\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(smelter4[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\nelseif string.find(T, indy_type[9]) then\r\n   str = string.gsub(T, indy_type[9],\"\")\r\n   \r\n       if string.find(str, \"t1\") then \r\n          str = string.gsub(str, \"t1\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(honey1[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t2\") then \r\n          str = string.gsub(str, \"t2\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(honey2[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t3\") then \r\n          str = string.gsub(str, \"t3\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(honey3[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t4\") then \r\n          str = string.gsub(str, \"t4\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(honey4[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\nelseif string.find(T, indy_type[7]) then\r\n   str = string.gsub(T, indy_type[7],\"\")\r\n   \r\n       if string.find(str, \"t1\") then \r\n          str = string.gsub(str, \"t1\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(assembly1[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t2\") then \r\n          str = string.gsub(str, \"t2\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(assembly2[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t3\") then \r\n          str = string.gsub(str, \"t3\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(assembly3[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t4\") then \r\n          str = string.gsub(str, \"t4\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(assembly4[iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\nelseif string.find(T, indy_type[8]) then\r\n   str = string.gsub(T, indy_type[8],\"\")\r\n   \r\n       if string.find(str, \"t1\") then \r\n          str = string.gsub(str, \"t1\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(electronics[1][iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t2\") then \r\n          str = string.gsub(str, \"t2\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(electronics[2][iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t3\") then \r\n          str = string.gsub(str, \"t3\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(electronics[3][iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t4\") then \r\n          str = string.gsub(str, \"t4\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(electronics[4][iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end    \r\n    elseif string.find(T, indy_type[9]) then\r\n   str = string.gsub(T, indy_type[9],\"\")\r\n   \r\n       if string.find(str, \"t1\") then \r\n          str = string.gsub(str, \"t1\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(recycler[1][iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t2\") then \r\n          str = string.gsub(str, \"t2\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(recycler[2][iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t3\") then \r\n          str = string.gsub(str, \"t3\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(recycler[3][iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end\r\n        if string.find(str, \"t4\") then \r\n          str = string.gsub(str, \"t4\",\"\")\r\n          iid = tonumber(str)\r\n          c_pos = core_unit[1].getElementPositionById(recycler[4][iid])\r\n          system.print(\"Arrow added. Index : \" .. core_unit[1].spawnArrowSticker(c_pos[1],c_pos[2],c_pos[3]+4,\"down\"))\r\n          end    \r\nend\r\n ","filter":{"args":[{"variable":"*"}],"signature":"onInputText(text)","slotKey":"-4"},"key":"0"},{"code":"\r\nlocal posy = 10\r\nlocal t_posy = 10\r\nc=1\r\n\r\ncolumn = {10, 266, 522, 778}\r\n\r\nf_state = function(fid,F)\r\n    state = core_unit[1].getElementIndustryInfoById(fid)[\"state\"]\r\n        if state < 1 and F == 0 then\r\n        t = core_unit[1].getElementIndustryInfoById(fid)[\"currentProducts\"]\r\n        tt = string.gsub(system.getItem(t[1][\"id\"])[\"displayNameWithSize\"], \"Advanced\",\"Adv.\")\r\n        tt = string.gsub(tt, \"Uncommon\",\"Unc.\")\r\n        tt = string.gsub(tt, \"product\",\"\")\r\n        return tt .. \" - Error\" .. state\r\n        elseif state == 1 and F == 0 then\r\n        local industryInfo = core_unit[1].getElementIndustryInfoById(fid)\r\n            if industryInfo == nil then\r\n            return \"Not configured\"\r\n            end\r\n        local currentProducts = industryInfo[\"currentProducts\"]\r\n            if currentProducts == nil or #currentProducts == 0 then\r\n            return \"Not configured\"\r\n            end\r\n        local productInfo = system.getItem(currentProducts[1][\"id\"])\r\n            if productInfo == nil then\r\n            return \"Not configured\"\r\n            end\r\n        local displayNameWithSize = productInfo[\"displayNameWithSize\"]\r\n            if displayNameWithSize == nil then\r\n            return \"Not configured\"\r\n            end\r\n        local tt = string.gsub(displayNameWithSize, \"Advanced\",\"Adv.\")\r\n        tt = string.gsub(tt, \"Uncommon\",\"Unc.\")\r\n        tt = string.gsub(tt, \"product\",\"\")\r\n        return tt .. \" - Stopped\"\r\n        elseif state == 2 and F == 0 then \r\n        t = core_unit[1].getElementIndustryInfoById(fid)[\"currentProducts\"]\r\n        tt = string.gsub(system.getItem(t[1][\"id\"])[\"displayNameWithSize\"], \"Advanced\",\"Adv.\")\r\n        tt = string.gsub(tt, \"Uncommon\",\"Unc.\")\r\n        tt = string.gsub(tt, \"product\",\"\")\r\n        return tt .. \" - Running\"\r\n        elseif state == 3 and F == 0 then \r\n        t = core_unit[1].getElementIndustryInfoById(fid)[\"currentProducts\"]\r\n        tt = string.gsub(system.getItem(t[1][\"id\"])[\"displayNameWithSize\"], \"Advanced\",\"Adv.\")\r\n        tt = string.gsub(tt, \"Uncommon\",\"Unc.\")\r\n        tt = string.gsub(tt, \"product\",\"\")\r\n        return tt .. \" - Missing ingredient\"\r\n        elseif state == 4 and F == 0 then \r\n        t = core_unit[1].getElementIndustryInfoById(fid)[\"currentProducts\"]\r\n        tt = string.gsub(system.getItem(t[1][\"id\"])[\"displayNameWithSize\"], \"Advanced\",\"Adv.\")\r\n        tt = string.gsub(tt, \"Uncommon\",\"Unc.\")\r\n        tt = string.gsub(tt, \"product\",\"\")\r\n        return tt .. \" - Output full\"\r\n        elseif state == 5 and F == 0 then\r\n        t = core_unit[1].getElementIndustryInfoById(fid)[\"currentProducts\"]\r\n        tt = string.gsub(system.getItem(t[1][\"id\"])[\"displayNameWithSize\"], \"Advanced\",\"Adv.\")\r\n        tt = string.gsub(tt, \"Uncommon\",\"Unc.\")\r\n        tt = string.gsub(tt, \"product\",\"\")\r\n        return tt .. \" - No output container\"\r\n        elseif state == 6 and F == 0 then \r\n        t = core_unit[1].getElementIndustryInfoById(fid)[\"currentProducts\"]\r\n        tt = string.gsub(system.getItem(t[1][\"id\"])[\"displayNameWithSize\"], \"Advanced\",\"Adv.\")\r\n        tt = string.gsub(tt, \"Uncommon\",\"Unc.\")\r\n        tt = string.gsub(tt, \"product\",\"\")\r\n        return tt .. \" - Pending\"\r\n        elseif state == 7 and F == 0 then\r\n        t = core_unit[1].getElementIndustryInfoById(fid)[\"currentProducts\"]\r\n        tt = string.gsub(system.getItem(t[1][\"id\"])[\"displayNameWithSize\"], \"Advanced\",\"Adv.\")\r\n        tt = string.gsub(tt, \"Uncommon\",\"Unc.\")\r\n        tt = string.gsub(tt, \"product\",\"\")\r\n        return tt .. \" - Missing schematics\"\r\n        elseif state > 7 and F == 0 then\r\n        t = core_unit[1].getElementIndustryInfoById(fid)[\"currentProducts\"]\r\n        tt = string.gsub(system.getItem(t[1][\"id\"])[\"displayNameWithSize\"], \"Advanced\",\"Adv.\")\r\n        tt = string.gsub(tt, \"Uncommon\",\"Unc.\")\r\n        tt = string.gsub(tt, \"product\",\"\")\r\n        return tt .. \" - Error\" .. state\r\n    end\r\n    if state == 1 and F == 1 then return \"setNextFillColor(layer,1,1,0,1)\"\r\n        elseif state == 2 and F == 1 then return \"setNextFillColor(layer,0,1,0,1) \"\r\n        elseif state == 3 and F == 1 then return \"setNextFillColor(layer,1,0,0.8,1) \"\r\n        elseif state == 4 and F == 1 then return \"setNextFillColor(layer,1,0.5,0,1) \"\r\n        elseif state == 5 and F == 1 then return \"setNextFillColor(layer,1,0,0,1) \"\r\n        elseif state == 6 and F == 1 then return \"setNextFillColor(layer,0,0.5,1,1) \"\r\n        elseif state == 7 and F == 1 then return \"setNextFillColor(layer,1,0,0,1) \"\r\n        else return \"\"\r\n    end\r\nend\r\n\r\n\r\nindy_column = function(indy, tier, posx, posy)\r\nif indy[0] == 0 then return \"\" else    \r\n    stxt = \"\"\r\n    if tier <= 1 then t_color = \"setDefaultFillColor(layer, Shape_Text, \".. tier1colour ..\", 1)\\n\" end\r\n    if tier == 2 then t_color = \"setDefaultFillColor(layer, Shape_Text, \".. tier2colour ..\", 1)\\n\" end\r\n    if tier == 3 then t_color = \"setDefaultFillColor(layer, Shape_Text, \".. tier3colour ..\", 1)\\n\" end\r\n    if tier == 4 then t_color = \"setDefaultFillColor(layer, Shape_Text, \".. tier4colour ..\", .5)\\n\" end\r\n    \r\n        \r\n    for index,id in ipairs(indy) do\r\n        if index<10 then num= \"00\" .. tostring(index) \r\n         elseif index<100 then num= \"0\" .. tostring(index) \r\n         else num = tostring(index) end\r\n         if posy == border then posy=20 c=c+1 end       \r\n            \r\n        stxt = stxt ..\"addText(layer, font3, \\\"\" .. num..\"\\\", \".. column[c] .. \",\" .. posy ..\")\\n\" \r\n        .. f_state(id,1) .. \"addText(layer, font3,\\\"\" .. f_state(id,0).. \"\\\" , \" .. column[c] + 20 .. \",\" .. posy .. \")\\n\"\r\n        \r\n        posy = posy +10\r\n    end\r\n\r\n    t_posy = posy\r\n    return t_color .. stxt .. \" c=\" .. c ..\"\\n\"\r\nend\r\nend        \r\n\r\n\r\nscreen_one = [[\r\nlocal layer = createLayer()\r\nlocal rx, ry = getResolution()\r\n\r\nlocal font = loadFont(\"Oxanium\", 12)\r\nlocal font3 = loadFont(\"RobotoCondensed\", 11)\r\n\r\nlocal column = {10, 266, 522, 778}\r\n\r\nsetDefaultFillColor(layer, Shape_Text, 0,0,1,1)\r\nsetDefaultStrokeColor(layer, Shape_Line, 0,.3,2,1)\r\nsetDefaultStrokeColor(layer, Shape_BoxRounded, 0,.3,2,1)\r\n\r\nsetNextFillColor(layer, 0,0,0,0)\r\nsetNextStrokeWidth(layer, 1)\r\naddBoxRounded(layer, 0, 0, rx, ry, 10)\r\n\r\nlocal div = rx/4\r\nlocal posy = 10\r\n\r\nlocal header = function(tag, y, p, n)\r\n    setNextFillColor(layer, 0,0,1,0.2)\r\n    setNextStrokeWidth(layer, .1)\r\n    addBoxRounded(layer, p, y, div - 20, 20, 4)\r\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\r\n    setNextFillColor(layer, 1,1,1,1)\r\n    addText(layer, font, \"(\" .. n .. \") \" .. tag, div/2+(p)-10, y+11)    \r\nend\r\n\r\nfor x = 1,5 do addLine (layer, div*x, 0, div*x, ry) end\r\n\r\nlocal c = 1\r\n\r\nheader(\"Metalwork Industry\", ]].. t_posy ..[[, column[c], ]]..metalwork_all..[[)\r\n]] .. indy_column(metalwork1,1,column[c],t_posy+40) .. [[\r\n]] .. indy_column(metalwork2,2,column[c],t_posy) .. [[\r\n]] .. indy_column(metalwork3,3,column[c],t_posy) .. [[\r\n]] .. indy_column(metalwork4,4,column[c],t_posy) .. [[\r\n\r\nheader(\"Electronics Industry\", ]].. t_posy ..[[, column[c], ]]..electronics_all..[[)\r\n]] .. indy_column(electronics1,1,column[c],t_posy+40) .. [[\r\n]] .. indy_column(electronics2,2,column[c],t_posy) .. [[\r\n]] .. indy_column(electronics3,3,column[c],t_posy) .. [[\r\n]] .. indy_column(electronics4,4,column[c],t_posy) .. [[\r\n\r\n\r\nheader(\"Glass Industry\", ]].. t_posy ..[[, column[c], ]]..glass_all..[[)\r\n]] .. indy_column(glass1,1,column[c],t_posy+40) .. [[\r\n]] .. indy_column(glass2,2,column[c],t_posy) .. [[\r\n]] .. indy_column(glass3,3,column[c],t_posy) .. [[\r\n]] .. indy_column(glass4,4,column[c],t_posy) .. [[\r\n]]\r\n\r\nposy = 10\r\nt_posy = 10\r\nc=1\r\n\r\nscreen_two = [[\r\nlocal layer = createLayer()\r\nlocal rx, ry = getResolution()\r\n\r\nlocal font = loadFont(\"Oxanium\", 12)\r\nlocal font3 = loadFont(\"RobotoCondensed\", 11)\r\n\r\nlocal column = {10, 266, 522, 778}\r\n\r\nsetDefaultFillColor(layer, Shape_Text, 0,0,1,1)\r\nsetDefaultStrokeColor(layer, Shape_Line, 0,.3,2,1)\r\nsetDefaultStrokeColor(layer, Shape_BoxRounded, 0,.3,2,1)\r\n\r\nsetNextFillColor(layer, 0,0,0,0)\r\nsetNextStrokeWidth(layer, 1)\r\naddBoxRounded(layer, 0, 0, rx, ry, 10)\r\n\r\nlocal div = rx/4\r\nlocal posy = 10\r\n\r\nlocal header = function(tag, y, p, n)\r\n    setNextFillColor(layer, 0,0,1,0.2)\r\n    setNextStrokeWidth(layer, .1)\r\n    addBoxRounded(layer, p, y, div - 20, 20, 4)\r\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\r\n    setNextFillColor(layer, 1,1,1,1)\r\n    addText(layer, font, \"(\" .. n .. \") \" .. tag, div/2+(p)-10, y+11)    \r\nend\r\n\r\nfor x = 1,5 do addLine (layer, div*x, 0, div*x, ry) end\r\n\r\nlocal c = 1\r\n\r\nheader(\"3D Printers\", ]].. t_posy ..[[, column[c], ]]..printer_all..[[)\r\n]] .. indy_column(printer1,1,column[c],t_posy+40) .. [[\r\n]] .. indy_column(printer2,2,column[c],t_posy) .. [[\r\n]] .. indy_column(printer3,3,column[c],t_posy) .. [[\r\n]] .. indy_column(printer4,4,column[c],t_posy) .. [[\r\n\r\nheader(\"Chemical Industry\", ]].. t_posy ..[[, column[c], ]]..chemical_all..[[)\r\n]] .. indy_column(chemical1,1,column[c],t_posy+40) .. [[\r\n]] .. indy_column(chemical2,2,column[c],t_posy) .. [[\r\n]] .. indy_column(chemical3,3,column[c],t_posy) .. [[\r\n]] .. indy_column(chemical4,4,column[c],t_posy) .. [[\r\n\r\nheader(\"Refiners\", ]].. t_posy ..[[, column[c], ]]..refiner_all..[[)\r\n]] .. indy_column(refiner1,1,column[c],t_posy+40) .. [[\r\n]] .. indy_column(refiner2,2,column[c],t_posy) .. [[\r\n]] .. indy_column(refiner3,3,column[c],t_posy) .. [[\r\n]] .. indy_column(refiner4,4,column[c],t_posy) .. [[\r\n\r\nheader(\"Smelters\", ]].. t_posy ..[[, column[c], ]]..smelter_all..[[)\r\n]] .. indy_column(smelter1,1,column[c],t_posy+40) .. [[\r\n]] .. indy_column(smelter2,2,column[c],t_posy) .. [[\r\n]] .. indy_column(smelter3,3,column[c],t_posy) .. [[\r\n]] .. indy_column(smelter4,4,column[c],t_posy) .. [[\r\n\r\nheader(\"Honeycomb\", ]].. t_posy ..[[, column[c], ]]..honey_all..[[)\r\n]] .. indy_column(honey1,1,column[c],t_posy+40) .. [[\r\n]] .. indy_column(honey2,2,column[c],t_posy) .. [[\r\n]] .. indy_column(honey3,3,column[c],t_posy) .. [[\r\n]] .. indy_column(honey4,4,column[c],t_posy) .. [[\r\n\r\nheader(\"Recyclers\", ]].. t_posy ..[[, column[c], ]]..recycler_all..[[)\r\n]] .. indy_column(recycler1,1,column[c],t_posy+40) .. [[\r\n]] .. indy_column(recycler2,2,column[c],t_posy) .. [[\r\n]] .. indy_column(recycler3,3,column[c],t_posy) .. [[\r\n]] .. indy_column(recycler4,4,column[c],t_posy) .. [[\r\n]]  \r\n\r\nposy = 10\r\nt_posy = 10\r\nc=1\r\ncolumn = {10, 266, 522, 778}\r\n\r\nscreen_three = [[\r\nlocal layer = createLayer()\r\nlocal rx, ry = getResolution()\r\n\r\nlocal font = loadFont(\"Oxanium\", 12)\r\nlocal font3 = loadFont(\"RobotoCondensed\", 11)\r\n\r\ncolumn = {10, 266, 522, 778}\r\n\r\nsetDefaultFillColor(layer, Shape_Text, 0,0,1,1)\r\nsetDefaultStrokeColor(layer, Shape_Line, 0,.3,2,1)\r\nsetDefaultStrokeColor(layer, Shape_BoxRounded, 0,.3,2,1)\r\n\r\nsetNextFillColor(layer, 0,0,0,0)\r\nsetNextStrokeWidth(layer, 1)\r\naddBoxRounded(layer, 0, 0, rx, ry, 10)\r\n\r\nlocal div = rx/4\r\nlocal posy = 10\r\n\r\nlocal header = function(tag, y, p, n)\r\n    setNextFillColor(layer, 0,0,1,0.2)\r\n    setNextStrokeWidth(layer, .1)\r\n    addBoxRounded(layer, p, y, div - 20, 20, 4)\r\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\r\n    setNextFillColor(layer, 1,1,1,1)\r\n    addText(layer, font, \"(\" .. n .. \") \" .. tag, div/2+(p)-10, y+11)    \r\nend\r\n\r\nfor x = 1,5 do addLine (layer, div*x, 0, div*x, ry) end\r\n\r\nlocal c = 1\r\n\r\nheader(\"Assembly Lines\", ]].. t_posy ..[[, column[c], ]]..assembly_all..[[)\r\n]] .. indy_column(assembly1,1,column[c],t_posy+40) .. [[\r\n]] .. indy_column(assembly2,2,column[c],t_posy) .. [[\r\n]] .. indy_column(assembly3,3,column[c],t_posy) .. [[\r\n]] .. indy_column(assembly4,4,column[c],t_posy) .. [[\r\n\r\n]]  \r\n\r\nscreens[1].activate()\r\nscreens[2].activate()\r\nscreens[3].activate()\r\n\r\nscreens[1].setRenderScript(screen_one)\r\nscreens[2].setRenderScript(screen_two)\r\nscreens[3].setRenderScript(screen_three)\r\n--screens[4].setRenderScript(screen_four)\r\n--screens[5].setRenderScript(screen_five)","filter":{"args":[{"value":"refresh"}],"signature":"onTimer(timerid)","slotKey":"-1"},"key":"0"},{"code":"--screen 1\r\nRefresh_timer = 5 --export: Screen(s) refresh timer in seconds\r\nsystem.print(\"Refresh timer set to: \"..Refresh_timer..\" seconds\")\r\n\r\n--[[ LUA PARAMETERS ]]\r\nShow_name = false --export: Shows Industry unit name if checked\r\nborder = 550 --export: Bottom display line<br>Maximum 600<br>Use to adjust\r\ntier1colour = '1, 1, 1' --export: Set Tier 1 Colour\r\ntier2colour = '0, 1, 0' --export: Set Tier 2 Colour\r\ntier3colour = '0, 0, 1' --export: Set Tier 3 Colour\r\ntier4colour = '.3, 0, .5' --export: Set Tier 4 Colour\r\n\r\n--[[\r\nmetalworks\r\nelectronics\r\nglass\r\nprinter\r\nchemical\r\nrefiner\r\nsmelter\r\nassembly\r\nhoney\r\nrecycler\r\n]]\r\n\r\n\r\n\r\nunit.setTimer(\"refresh\",Refresh_timer)\r\n\r\n\r\n","filter":{"args":[],"signature":"onStart()","slotKey":"-1"},"key":"0"}],"methods":[],"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-5":{"name":"library","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}}}}